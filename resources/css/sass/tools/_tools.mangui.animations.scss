/**
 * animation mixin
 *
 * [USE] @include animation($animation-name $length $repeat $animation-type);
 */

@mixin mangui-animation($animate...) {
	$max: length($animate);
	$animations: '';

	@for $i from 1 through $max {
		$animations: #{$animations + nth($animate, $i)};

		@if $i < $max {
			$animations: #{$animations + ", "};
		}
	}
	-webkit-animation: $animations;
		 -moz-animation: $animations;
			 -o-animation: $animations;
					animation: $animations;
}





/**
 * @keyframes mixin
 *
 * Common usage:
 *
 * @include mangui-keyframes($animation-name) {
 *     $percentage { $attribute: $value, $attribute: $value ... }
 *     $percentage { $attribute: $value, $attribute: $value ... }
 *     $percentage { $attribute: $value, $attribute: $value ... }
 * }
 */

@mixin mangui-keyframes($animation-name) {
	@-webkit-keyframes #{$animation-name} {
		@content;
	}
	@-moz-keyframes #{$animation-name} {
		@content;
	}
	@-o-keyframes #{$animation-name} {
		@content;
	}
	@keyframes #{$animation-name} {
		@content;
	}
}





/**
 * @keyframes mixin
 *
 * Common usage:
 *
 * @include mangui-keyframes($animation-name) {
 *     $percentage { $attribute: $value, $attribute: $value ... }
 *     $percentage { $attribute: $value, $attribute: $value ... }
 *     $percentage { $attribute: $value, $attribute: $value ... }
 * }
 */

@mixin mangui-animation-play-state($state) {
	-webkit-animation-play-state: $state;
	   -moz-animation-play-state: $state;
	    -ms-animation-play-state: $state;
	     -o-animation-play-state: $state;
	        animation-play-state: $state;
}





/**
 * Animation delays
 */

@mixin mangui-animation-delay($delay...) {
    -webkit-animation-delay: $delay;
       -moz-animation-delay: $delay;
         -o-animation-delay: $delay;
            animation-delay: $delay;
}